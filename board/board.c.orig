#include "board.h"

#include <rthw.h>
#include <rtthread.h>

#if defined(RT_USING_USER_MAIN)&&defined(RT_USING_HEAP)
#define RTHRAP_SIZE 1024

#define CH579M_SRAM1_START     (0x20000000)
#define CH579M_SRAM1_END        (CH579M_SRAM1_START+32*1024)

#if defined(__CC_ARM)||defined(__CLANG_ARM)
extern int Image$$RW_IRAM1$$ZI$$Limit;
#define HEAP_BEGIN   ((void*)&Image$$RW_IRAM1$$ZI$$Limit)
#endif

#define HEAP_END       CH579M_SRAM1_END


RT_WEAK void *rt_heap_begin_get(void)
{
return HEAP_BEGIN;
}

RT_WEAK void *rt_heap_end_get(void)
{
return (rt_uint32_t*)HEAP_END;
}
#endif

void rt_hw_board_init()
{
SysTick_Config(FREQ_SYS/RT_TICK_PER_SECOND);

GPIOB_SetBits(GPIO_Pin_23);
GPIOB_ModeCfg(GPIO_Pin_23,GPIO_ModeOut_PP_5mA);
GPIOB_ModeCfg(GPIO_Pin_22,GPIO_ModeOut_PP_5mA);
GPIOB_SetBits(GPIO_Pin_22);

#ifdef RT_USING_COMPONENTS_INIT
rt_components_board_init();
#endif

#if defined(RT_USING_CONSOLE)&&defined(RT_USING_DEVICE)
rt_console_set_device(RT_CONSOLE_DEVICE_NAME);
#endif

#if defined(RT_USING_USER_MAIN)&&defined(RT_USING_HEAP)
rt_system_heap_init(rt_heap_begin_get(),rt_heap_end_get());
#endif

GPIOB_SetBits(GPIO_Pin_9);
GPIOB_ModeCfg(GPIO_Pin_8,GPIO_ModeIN_PU);
GPIOB_ModeCfg(GPIO_Pin_9,GPIO_ModeOut_PP_5mA);

UART1_DefInit();

}

void SysTick_Handler(void)
{
rt_interrupt_enter();
rt_tick_increase();
rt_interrupt_leave();
}

void rt_hw_console_output(const char *str)
{
rt_enter_critical();
while(&str!='\0')
{
if(*str=='\n'){
UART1_SendByte('\r');
while(R8_UART1_TFC==UART_FIFO_SIZE);
}
UART1_SendByte(*str++);
while(R8_UART1_TFC==UART_FIFO_SIZE);
}

 rt_exit_critical();

}
